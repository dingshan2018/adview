<template>
    <div class="animate-editor_main">
        <el-collapse v-model="activeNames">
            <el-collapse-item name="ani1" v-for="(aniJson, index) in animateJson" :key="index">
                <template slot="title">
                    动画 1 <i class="animate-editor_close el-icon-close" @click.stop=""></i>
                </template>
                <div class="form-group">
                    <label>动画</label>
                    <div class="clearfix">
                        <div class="form-center w168">
                            <el-select v-model="animateSelect" placeholder="请选择">
                                <el-option label="无" value="">
                                </el-option>
                                <el-option-group v-for="(group, index2) in animateOptions" :label="group.label" :key="index2">
                                    <el-option v-for="(item, index3) in group.options" :label="item.label" :value="item.value" :disabled="item.disabled" :key="index3">
                                    </el-option>
                                </el-option-group>
                            </el-select>
                        </div>
                    </div>
                </div>
                <div class="form-group" v-if="isDire">
                    <label>方向</label>
                    <div class="clearfix">
                        <div class="form-center w168">
                            <el-select v-model="direName" placeholder="请选择">
                                <el-option v-for="(item, index) in direOptions" :label="item.label" :value="item.value" :disabled="item.disabled" :key="index">
                                </el-option>
                            </el-select>
                        </div>
                    </div>
                </div>
                <div class="form-group" v-if="animateName">
                    <label>时长</label>
                    <div class="clearfix">
                        <div class="form-center w168">
                            <el-slider v-model="time" :max="timeMax" show-input>
                            </el-slider>
                        </div>
                    </div>
                </div>
                <div class="form-group" v-if="animateName">
                    <label>延时</label>
                    <div class="clearfix">
                        <div class="form-center w168">
                            <el-slider v-model="delay" :max="delayMax" show-input>
                            </el-slider>
                        </div>
                    </div>
                </div>
            </el-collapse-item>
        </el-collapse>
        <div class="tc ptb20">
            <el-button type="success">添加动画</el-button>
            <el-button type="primary" @click="preview">预览动画</el-button>
        </div>
    </div>
</template>
<script>
import bus from '~/global/bus';
export default {
    data() {
            return {
                activeNames: 'ani1',
                animateJson:'',
                animateName: '',
                animateSelect:'',
                json: '',
                id: this.showId,
                isDire:false,
                direName:'Right',
                hasDireOptions:{},
                animateOptions: [{
                    label: '进入',
                    options: [{
                        value: 'fadeIn',
                        label: '淡入',
                        dire:false
                    }, {
                        value: 'fadeIn-dire',
                        label: '移入',
                        dire:true
                    }, {
                        value: 'bounceIn-dire',
                        label: '弹入',
                        dire:true
                    }, {
                        value: 'flipInY',
                        label: '翻转进入',
                        dire:false
                    }, {
                        value: 'bounceIn',
                        label: '中心弹入',
                        dire:false
                    }, {
                        value: 'zoomIn',
                        label: '中心放大'
                    }, {
                        value: 'rollIn-dire',
                        label: '翻滚进入',
                        dire:true
                    }, {
                        value: 'flipInX',
                        label: '翻开进入',
                        dire:false
                    }, {
                        value: 'lightSpeedIn-dire',
                        label: '光速进入',
                        dire:true
                    }, {
                        value: 'twisterInDown-dire',
                        label: '魔幻进入',
                        dire:true
                    }, {
                        value: 'puffIn',
                        label: '缩小进入',
                        dire:false
                    }, {
                        value: 'twisterInUp-dire',
                        label: '旋转进入',
                        dire:true
                    }]
                }, {
                    label: '强调',
                    options: [{
                        value: 'wobble',
                        label: '摇摆',
                        dire:false
                    }, {
                        value: 'rubberBand',
                        label: '抖动',
                        dire:false
                    }, {
                        value: 'rotateIn',
                        label: '旋转',
                        dire:false
                    }, {
                        value: 'flip',
                        label: '翻转',
                        dire:false
                    }, {
                        value: 'swing',
                        label: '悬摆',
                        dire:false
                    }, {
                        value: 'flash',
                        label: '闪烁',
                        dire:false
                    }, {
                        value: 'tada',
                        label: '放大抖动',
                        dire:false
                    }, {
                        value: 'jello',
                        label: '倾斜摆动',
                        dire:false
                    }, {
                        value: 'slideDown',
                        label: '下滑',
                        dire:false
                    }, {
                        value: 'slideUp',
                        label: '上滑',
                        dire:false
                    }]
                }, {
                    label: '退出',
                    options: [{
                        value: 'fadeOut',
                        label: '淡出',
                        dire:false
                    }, {
                        value: 'fadeOut-dire',
                        label: '移出',
                        dire:true
                    }, {
                        value: 'bounceOut-dire',
                        label: '弹出',
                        dire:true
                    }, {
                        value: 'flipOutY',
                        label: '翻转消失',
                        dire:false
                    }, {
                        value: 'bounceOut',
                        label: '中心消失',
                        dire:false
                    }, {
                        value: 'zoomOut',
                        label: '中心缩小',
                        dire:false
                    }, {
                        value: 'rollOut-dire',
                        label: '翻滚退出',
                        dire:true
                    }, {
                        value: 'flipOutX',
                        label: '翻开消失',
                        dire:false
                    }, {
                        value: 'lightSpeedOut-dire',
                        label: '光速退出',
                        dire:true
                    }, {
                        value: 'puffOut',
                        label: '放大退出',
                        dire:false
                    }, {
                        value: 'hingeRight-dire',
                        label: '悬挂脱落',
                        dire:true
                    }]
                }],
                direOptions: [{
		          label: '从左到右',
		          value: 'Right'
		        },{
		          label: '从上到下',
		          value: 'Down'
		        }, {
		          label: '从右到左',
		          value: 'Left'
		        }, {
		          label: '从下到上',
		          value: 'Up'
		        }],
                time: 1,
                delay: 0,
                timeMax: 20,
                delayMax: 20

            };
        },
        props: ['renderJson', 'showId'],
        created() {
            this.json = this.parseJson(this.renderJson);
            this.getDireOptions();
            this.setInput();
        },
        watch: {
            animateName(val) {
            	console.info('animateName',this.animateName)
                this.json[this.id].animate.animationName = val;
                this.triggerApp();
            },
            time(val) {
                this.json[this.id].animate.animationDuration = val;
                this.triggerApp();
            },
            delay(val) {
                this.json[this.id].animate.animationDelay = val;
                this.triggerApp();
            },
            renderJson() {
                this.json = this.parseJson(this.renderJson);
            },
            showId() {
                this.id = this.showId;
                console.info('id');
                this.setInput();
            },
            animateSelect() {
            	console.info('animateSelect',this.animateSelect)
            	this.splitAnimateSelect();
            },
            direName() {
            	console.info('direName',this.direName)
            	this.splitAnimateSelect();
            },
            isDire(val) {
            	console.info('isDire',this.direName)
            	if(this.isDire===true&&this.direName===''){
            		this.direName='Right';
            	}
            }

        },
        methods: {
        	//初始化拼接json
        	getDireOptions() {
        		let temp;
        		for (let i = 0 ,len=this.animateOptions.length; i < len; i++) {
                	let group=this.animateOptions[i].options;
                	for (let j = 0 ,len2=group.length; j < len2; j++) {
	                    if (group[j].dire === true) {
	                    	console.info(group[j].value)
	                    	temp=group[j].value.split('-dire')[0];
	                        this.hasDireOptions[temp]=group[j].value;
	                    }
	                }
                }
        	},
        	//赋值
            setInput() {
                let json = this.renderJson[this.showId];
                let animate = json.animate;
                this.animateJson=animate;
                this.animateName = animate.animationName;
                this.time = animate.animationDuration;
                this.delay = animate.animationDelay;
                console.info('animateName',this.animateName)
                if(this.animateName){
                	this.animateNameToSelect();
                }
            },
            triggerApp() {
                bus.$emit('update-json', this.json);
            },
            parseJson(json) {
                return JSON.parse(JSON.stringify(json));
            },
            //预览动画
            preview() {
                let name = this.animateName;
                this.json[this.id].animate.animationName = '';
                this.triggerApp();
                setTimeout(function() {
                    this.json[this.id].animate.animationName = name;
                    this.triggerApp();
                }.bind(this), 100);
            },
            //切割分析animateSelect值
            splitAnimateSelect() {
            	let temp=this.animateSelect.split('-dire');
            	if(temp.length>1){
            		this.animateName=temp[0]+this.direName;
            		this.isDire=true;
            	}else{
            		this.animateName=this.animateSelect;
            		this.isDire=false;
            	}
            	
            },
            //animateName转换为animateSelect值
            animateNameToSelect() {
            	let temp;
            	for (let key in this.hasDireOptions){
            		temp=this.animateName.split(key);
            		if(temp.length>1){
            			this.animateSelect=key + '-dire';
            			this.direName=temp[1];
            			this.isDire=true;
            		}
            	}
            }

        }
};
</script>
